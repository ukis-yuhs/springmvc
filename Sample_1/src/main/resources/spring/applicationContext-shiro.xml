<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>Shiro Configuration</description>
    <!--web.xml中shiro到filter对应到bean-->
    <!--shiro到web过滤器-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，
        请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/user/login"/>
        <!-- 认证成功统一跳转到first.action,建议不配置，
            shiro认证成功自动到上一个请求路径 -->
        <property name="successUrl" value="/page/index"/>
        <!--通过unauthorizedUrl指定没有权限操作是跳转的页面-->
        <property name="unauthorizedUrl" value="/page/refuse"/>
        <!-- 自定义filter配置 -->
        <property name="filters">
            <map>
                <!--将自定义的formAuthenticationFilter注入到shiroFilter中-->
                <entry key="authc" value-ref="formAuthenticationFilter" />
            </map>
        </property>
        <!-- 过滤器链定义，从上向下顺序执行，一般/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 对静态资源设置匿名访问 -->
                <!--org.apache.shiro.web.filter.athc.AnonymousFilter-->
                /assets/** = anon
                /user/getCheckImg = anon
                /index.jsp  = anon
                /page/login = anon
                <!--请求/page/logout地址，shiro清除session，自动退出这个地址可以不存在-->
                <!--org.apache.shiro.web.filter.athc.LogoutFilter-->
                /page/logout = logout
                <!--商品查询需要商品查询权限-->
                <!--org.apache.shiro.web.filter.athz.PermissionsAuthorizationFilter-->
                <!--/items/queryItems.action = perms[item:query]-->
                <!--身份认证通过或通过记住我认证通过的可以访问登录操作时不做检查-->
                <!--org.apache.shiro.web.filter.athc.UserFilter-->
                /page/index = user
                <!--/** = authc所有url都必须认证通过才可以访问-->
                <!--org.apache.shiro.web.filter.athc.FormAuthenticationFilter-->
                /** = authc

                <!--&lt;!&ndash;/** = anon所有url都可以匿名访问&ndash;&gt;-->
                <!--/** = anon-->
            </value>
        </property>
    </bean>

    <!--securityManager-->
    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <!--注入缓存管理器-->
        <property name="cacheManager" ref="cacheManager"/>
        <!--注入会话管理器-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--记住我-->
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>
    <!--自定义form认证过滤器-->
    <!--基于Form表单的身份验证过滤器，不配置也会注册此过滤器，表单的用户名，密码及loginurl将采用默认值-->
    <bean id="formAuthenticationFilter"  class="com.yuhs.shiro.CustomFormAuthenticationFilter">
        <!--jsp表单的名称-->
        <property name="usernameParam" value="username" />
        <property name="passwordParam" value="password" />
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>
    <!--rememberMeManager管理器，写cookie，取出cookie生成用户信息-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <!--记住我cookie-->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--rememberMe是cookie的名称-->
        <constructor-arg value="rememberMe"/>
        <!--记住cookie生效时间30天-->
        <property name="maxAge" value="2592000"/>
    </bean>
    <!--自定义realm-->
    <bean id="userRealm" class="com.yuhs.shiro.CustomRealm">
        <!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器都要求进行散列 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    <!--凭证匹配器-->
    <!--可自定义-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/><!-- 散列方法 -->
        <property name="hashIterations" value="1"/><!-- 散列次数 -->
    </bean>
    <!--缓存管理器-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:spring/shiro-ehcache.xml"/>
    </bean>
    <!--会话管理器-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!--session的失效时常，单位毫秒-->
        <property name="globalSessionTimeout" value="600000"/>
        <!--删除失效的session-->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>
</beans>