<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <mvc:annotation-driven />

    <!-- 2.静态资源默认servlet配置
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射
     -->
    <mvc:default-servlet-handler/>

    <!-- 3.freemarker配置在前，当请求发现/WEB-INF/ftl/没有当时候，就会去/WEB-INF/jsp/查找 -->
    <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
        <!--<property name="templateLoaderPath" value="/WEB-INF/ftl/"/>-->
    <!--</bean>-->
    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
        <!--<property name="prefix" value=""/>-->
        <!--<property name="suffix" value=".ftl"/>-->
        <!--<property name="contentType" value="text/html;charset=UTF-8"/>-->
    <!--</bean>-->

    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 4.扫描web相关的bean -->
    <context:component-scan base-package="com.yuhs"/>

    <!-- 5.静态资源  -->
    <mvc:resources mapping="/assets/**" location="/WEB-INF/assets/"/>

    <!--读入属性文件,因使用场所不同,需要在父容器中读取-->
    <context:property-placeholder location="classpath:properties/resource.properties" />
    <!-- 6.文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    <!--配置上传文件大小限制的拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/file/fileUpload"/>
            <bean class="com.yuhs.interceptor.FileUploadInterceptor">
                <property name="maxSize" value="31457280"/><!--30M-->
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--Shiro-->
    <!--开启aop，基于类代理-->
    <!--开启基于类的代理后，Controller的方法修饰符不能是private的，如果是private修饰符Service将不被注入-->
    <aop:config proxy-target-class="true"></aop:config>

    <!--开启shiro注解支持-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!--自定义异常处理anon无权限处理-->
    <bean id="exceptionResolver" class="com.yuhs.exception.CustomExceptionResolver"/>
</beans>